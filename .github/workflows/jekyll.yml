# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

env:
  SITE_DIR: "_site"

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy_preview:
    environment:
      name: github-pages
      url: ${{ steps.preview_url.outputs.url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: 'github-pages'
          path: "$SITE_DIR"

      - name: Define preview name
        id: preview_name
        run: |
          raw_branch="${{ github.ref_name }}"
          safe_branch="${raw_branch//\//_}"
          echo "name=$safe_branch" >> $GITHUB_OUTPUT

      - name: Deploy preview to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "./$SITE_DIR"
          destination_dir: ${{ steps.preview_name.outputs.name }}

      - name: Get Preview URL
        id: preview_url
        run: |
          echo "url=https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.preview_name.outputs.name }}/" >> $GITHUB_OUTPUT

  deploy_production:
    if: github.ref_name == 'main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: 'github-pages'
          path: "$SITE_DIR"

      - name: Create CNAME for production
        run: |
          DOMAIN=$(gh api repos/${GITHUB_REPOSITORY}/pages --jq '.cname')

          rm ./$SITE_DIR/CNAME
          echo "$DOMAIN" > ./$SITE_DIR/CNAME
          echo "www.$DOMAIN" >> ./$SITE_DIR/CNAME

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: "./$SITE_DIR"
